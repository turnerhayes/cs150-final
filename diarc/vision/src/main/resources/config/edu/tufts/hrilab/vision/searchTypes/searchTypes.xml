<!--
Set runtime configuration for SearchManagers (and MemoryObjectTypes).
	
Sets the default flags for SearchManagers.

Also, used to specify predetermined SearchManagers from conjunction of Predicates.
SearchType is assumed to have functorname="type" unless otherwise specified.
Arity is always two, and the descriptor must always be specified
(e.g., type(?X:, medkit).

NOTE:
"X" creates a com.Symbol with name "X".
"X:" creates a com.Constant with name "X".
"?X:" creates a com.Variable with name "?X" and no type.

-->

<searchTypes>
  <flags incrementalImgProc="false" incrementalDetector="false" serialProcessing="false" singleIteration="false"/>
  <searchType descriptor="handle">
    <predicate>
      orange(Y)
    </predicate>
    <predicate>
      knife(X)
    </predicate>
    <predicate>
      partOf(Y,X)
    </predicate>
  </searchType>
  <searchType descriptor="blade">
    <predicate>
      gray(Y)
    </predicate>
    <predicate>
      knife(X)
    </predicate>
    <predicate>
      partOf(Y,X)
    </predicate>
  </searchType>

  <!--<searchType descriptor="medkit_test">-->
    <!--<predicate>-->
      <!--box(X)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--white(X)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--cross(Y)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--red(Y)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--on(Y,X)-->
    <!--</predicate>-->
  <!--</searchType>-->
  <!--<searchType descriptor="medkit_single_test">-->
    <!--<predicate>-->
      <!--box(X)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--white(X)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--cross(Y)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--red(Y)-->
    <!--</predicate>-->
  <!--</searchType>-->
  <!--<searchType descriptor="radioactive_test">-->
    <!--<predicate>-->
      <!--box(X)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--yellow(X)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--radioactive(Y)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--on(Y,X)-->
    <!--</predicate>-->
  <!--</searchType>-->
  <!--<searchType descriptor="biohazard_test">-->
    <!--<predicate>-->
      <!--cylinder(X)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--orange(X)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--biohazard(Y)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--on(Y,X)-->
    <!--</predicate>-->
  <!--</searchType>-->
  <!--<searchType descriptor="radioactive_test">-->
    <!--<predicate>-->
      <!--radioactive(X)-->
    <!--</predicate>-->
  <!--</searchType>-->
  <!--<searchType descriptor="biohazard_test">-->
    <!--<predicate>-->
      <!--biohazard(X)-->
    <!--</predicate>-->
  <!--</searchType>-->
  <!--<searchType descriptor="cluster2d_test">-->
    <!--<predicate>-->
      <!--res(X)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--horizontal(X)-->
    <!--</predicate>-->
    <!--&lt;!&ndash;        <predicate>-->
        <!--cluster2d(X)-->
    <!--</predicate>&ndash;&gt;-->
  <!--</searchType>-->
  <!--<searchType descriptor="touching_test">-->
    <!--<predicate>-->
      <!--brad(X)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--knife(Y)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--touching(X,Y)-->
    <!--</predicate>-->
  <!--</searchType>-->
  <!--<searchType descriptor="aff_test">-->
    <!--<predicate>-->
      <!--knife(X)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--orange(Y)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--partOf(Y,X)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--grasp_point(W)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--on(W,Y)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--gray(Z)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--partOf(Z,X)-->
    <!--</predicate>-->
    <!--<predicate>-->
      <!--on(W,Z)-->
    <!--</predicate>-->
<!--</searchType>-->

  <searchType descriptor="relation_test">
  <predicate>
  knife(X)
  </predicate>
  <predicate>
  touching(X,Y)
  </predicate>
  <predicate>
  cup(Y)
  </predicate>
  </searchType>
</searchTypes>
